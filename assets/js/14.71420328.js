(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{309:function(t,e,a){"use strict";a.r(e);var s=a(0),r=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h3",{attrs:{id:"vue数据传递"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue数据传递"}},[t._v("#")]),t._v(" Vue数据传递")]),t._v(" "),a("p",[t._v("数据传递无非两种：父组件->子组件、子组件->父组件")]),t._v(" "),a("h4",{attrs:{id:"js数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js数据"}},[t._v("#")]),t._v(" js数据")]),t._v(" "),a("p",[t._v("父->子：子组件使用Prop，父组件将值绑定到data的数据。数据由父组件传给子组件，在子组件中更新时，通过$emit来将数据传给父组件以通知父组件更新。")]),t._v(" "),a("p",[t._v('子->父：数据由子组件传给父组件，更新时也是通过$emit将数据从$event传给父组件。也可以不用$event，直接传，父组件直接按顺序使用，但是这时父组件的template里不能写@update:value="onUpdateValue(xxxx)"，只能写：@update:value="onUpdateValue"。')]),t._v(" "),a("p",[t._v("区别只在于子组件使用的数据是否是Prop上的。")])])}),[],!1,null,null,null);e.default=r.exports}}]);